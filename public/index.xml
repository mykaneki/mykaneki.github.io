<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on mykaneki&#39;s blog</title>
    <link>https://mykaneki.github.io/</link>
    <description>Recent content in Documentation on mykaneki&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 03 Jan 2023 17:48:29 +0800</lastBuildDate><atom:link href="https://mykaneki.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计网英文复习</title>
      <link>https://mykaneki.github.io/posts/%E8%AE%A1%E7%BD%91%E8%8B%B1%E6%96%87%E5%A4%8D%E4%B9%A0/</link>
      <pubDate>Tue, 03 Jan 2023 17:48:29 +0800</pubDate>
      
      <guid>https://mykaneki.github.io/posts/%E8%AE%A1%E7%BD%91%E8%8B%B1%E6%96%87%E5%A4%8D%E4%B9%A0/</guid>
      <description>chapter 1 Computer Networks and the Internet&gt; chapter 1 Computer Networks and the Internet # chapter 1 Computer Networks and the Internet
interconnects 互相连接
Intranet 内网
twisted-pair copper wire 双绞铜线</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mykaneki.github.io/posts/%E8%AE%A1%E7%BD%91%E8%8B%B1%E6%96%87%E5%A4%8D%E4%B9%A0/featured.jpg" />
    </item>
    
    <item>
      <title>重装电脑</title>
      <link>https://mykaneki.github.io/docs/%E9%87%8D%E8%A3%85%E7%94%B5%E8%84%91/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mykaneki.github.io/docs/%E9%87%8D%E8%A3%85%E7%94%B5%E8%84%91/</guid>
      <description>git安装与配置&gt; git安装与配置 # git下载
配置账号信息
# git config --global user.name &amp;#34;kaneki_my&amp;#34;# git config --global user.email &amp;#34;2795188612@qq.com&amp;#34;# ssh-keygen -t rsa -C &amp;#34;2795188612@qq.com&amp;#34; 到git仓库，添加秘钥
查看密钥存放路径
​	将.pub 的内容复制到github上
GitHub上的git文档 git-tips/README.md at master · kwshare/git-tips (github.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mykaneki.github.io/docs/%E9%87%8D%E8%A3%85%E7%94%B5%E8%84%91/featured.jpg" />
    </item>
    
    <item>
      <title>细节或技巧</title>
      <link>https://mykaneki.github.io/posts/%E7%BB%86%E8%8A%82%E6%88%96%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mykaneki.github.io/posts/%E7%BB%86%E8%8A%82%E6%88%96%E6%8A%80%E5%B7%A7/</guid>
      <description>数组越界问题&gt; 数组越界问题 # int main(int argc, char* argv[]){ int i = 0; int arr[3] = {0}; for(; i&amp;lt;=3; i++){ arr[i] = 0; printf(&amp;#34;hello world\n&amp;#34;); } return 0; } 疑问：这段代码的运行结果理论上是无限打印，实际上VS编译器中只打印了四次。
在 C 语言中，只要不是访问受限的内存，所有的内存空间都是可以自由访问的。根据我们前面讲的数组寻址公式，a[3]也会被定位到某块不属于数组的内存地址上，而这个地址正好是存储变量 i 的内存地址，那么 a[3]=0 就相当于 i=0，所以就会导致代码无限循环。</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mykaneki.github.io/posts/%E7%BB%86%E8%8A%82%E6%88%96%E6%8A%80%E5%B7%A7/featured.jpg" />
    </item>
    
    <item>
      <title>杂记</title>
      <link>https://mykaneki.github.io/posts/%E6%9D%82%E8%AE%B0/</link>
      <pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mykaneki.github.io/posts/%E6%9D%82%E8%AE%B0/</guid>
      <description>彻底删除idea项目&gt; 彻底删除idea项目 # remove module 手动删除文件夹 删除项目引用 使用Everything搜索找到 项目.contexts.zip和项目.tasks.zip两个文件，将其删除 idea快捷键&gt; idea快捷键 # 批量编辑 ：alt + shift+insert
方法说明注释：输入/** ,点击“Enter”</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://mykaneki.github.io/posts/%E6%9D%82%E8%AE%B0/featured.jpg" />
    </item>
    
  </channel>
</rss>
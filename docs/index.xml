<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on mykaneki's blog</title><link>https://mykaneki.github.io/docs/</link><description>Recent content in Docs on mykaneki's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 01 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mykaneki.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>算法学习</title><link>https://mykaneki.github.io/docs/%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E7%AE%97%E6%B3%95/</guid><description/></item><item><title>小迪安全学习笔记-信息收集</title><link>https://mykaneki.github.io/docs/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</link><pubDate>Tue, 17 Jan 2023 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</guid><description>CDN相关技术> CDN相关技术 # CDN是什么？CDN对安全渗透有何影响？
CDN (Content Delivery Network) 是一种将网络内容分布到多个地理位置的技术。当用户访问网站时，CDN 会将数据从最近的服务器节点传递给用户，从而加快网站的加载速度。
CDN 技术对于安全渗透的影响，具体如下：
防御 DDoS 攻击： CDN 可以通过分布式网络架构来缓解 DDoS 攻击，因为攻击者需要同时针对多个节点发起攻击才能影响网站的可用性。 缩短攻击链： CDN 会将网站的内容存储在多个地理位置，因此攻击者需要绕过更多的网络跳转才能到达目标网站，这可能会使攻击者更难找到入口。 强制加密： CDN 一般提供了HTTPS 加密协议，这可以防止中间人攻击，并且可以防止攻击者拦截并篡改数据。 保护敏感信息： CDN 一般都有加密和隐私保护的措施来保护敏感信息，如防止跟踪和收集用户的数据。 然而，CDN技术也有它自身的风险，比如一些CDN服务商可能会将数据存储在不安全的地方，或者CDN服务商自己可能会被黑客攻击，使得数据泄露。所以需要选择合适的CDN服务商并且经常审计和监控。</description></item><item><title>小迪安全学习笔记-基础入门</title><link>https://mykaneki.github.io/docs/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</guid><description>概念名词> 概念名词 # 域名> 域名 # 什么是域名
顶级域名、二级域名和多级域名
域名发现对安全测试的意义
旁站攻击 DNS> DNS # 什么是 DNS？
域名系统（Domain Name System）。它是一个域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用UDP端口53。对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。 本地 HOSTS 与 DNS 的关系？
Hosts在本地将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当我们访问域名时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。 Hosts地址：C:\Windows\System32\drivers\etc\hosts CDN 是什么？与 DNS 的关系？
CDN：是构建在数据网络上的一种分布式的内容分发网。可以提高系统的响应速度，也可以一定程度的拦截/防御攻击。 在攻击的时候，如果找不到源站，那么我们扫描的就是CDN节点中的缓存，是一种阻碍。 常见的 DNS 安全攻击有哪些？</description></item><item><title>docker命令</title><link>https://mykaneki.github.io/docs/docker%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/docker%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>docker命令> docker命令 # 查看镜像
docker image ls
删除所有镜像
docker rmi $(docker images -q)
查看运行中的容器
docker ps
宿主机和容器间复制文件
从主机复制到容器sudo docker cp host_path containerID:container_path
从容器复制到主机sudo docker cp containerID:container_path host_path
停止并删除容器
docker stop &amp;lt;container id|name=``&amp;quot;&amp;quot;``&amp;gt;&amp;lt;/container&amp;gt;</description></item><item><title>DVWA靶场</title><link>https://mykaneki.github.io/docs/dvwa/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/dvwa/</guid><description>环境搭建> 环境搭建 # kali + docker
docker run --rm -it -p 80:80 vulnerables/web-dvwa 打开网页 http://127.0.0.1/index.php
点击Create / Reset database
Username：admin Password：password
安装及配置BurpSuite> 安装及配置BurpSuite # 下载所需要的文件
Releases · h3110w0r1d-y/BurpLoaderKeygen (github.com)
​ Burp Suite Release Notes (portswigger.</description></item><item><title>重装电脑</title><link>https://mykaneki.github.io/docs/%E9%87%8D%E8%A3%85%E7%94%B5%E8%84%91/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E9%87%8D%E8%A3%85%E7%94%B5%E8%84%91/</guid><description>git安装与配置> git安装与配置 # git下载
配置账号信息
# git config --global user.name &amp;#34;kaneki_my&amp;#34; # git config --global user.email &amp;#34;2795188612@qq.com&amp;#34; # ssh-keygen -t rsa -C &amp;#34;2795188612@qq.com&amp;#34; 到git仓库，添加秘钥
查看密钥存放路径
​ 将.pub 的内容复制到github上
GitHub上的git文档 git-tips/README.md at master · kwshare/git-tips (github.</description></item><item><title>操作系统学习笔记</title><link>https://mykaneki.github.io/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/</guid><description>1. 绪论> 1. 绪论 # 1.1 操作系统概述> 1.1 操作系统概述 # 1.1.1 操作系统的定义> 1.1.1 操作系统的定义 # Operating System 是指控制和管理整个计算机系统的硬件与软件资源，合理地组织和调度计算机的工作和资源的分配，进而为用户和其他软件提供方便接口与环境的程序集合。
操作系统是计算机系统中最基本的系统软件。
1.1.2 操作系统的功能> 1.1.2 操作系统的功能 # 操作系统是用户和计算机硬件之间的接口。
命令接口
联机命令接口（交互式命令接口）
适用于分时和实时操作系统
脱机命令接口（批处理命令接口）
适用于批处理系统</description></item><item><title>大数据基本配置和使用</title><link>https://mykaneki.github.io/docs/%E5%A4%A7%E6%95%B0%E6%8D%AE/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E5%A4%A7%E6%95%B0%E6%8D%AE/</guid><description>集群配置> 集群配置 # kali+docker
选择一个目录存放git clone的目录，克隆项目
项目克隆前需要换源以及git ssh配置
cd ~/clonprj
git clone git@github.com:big-data-europe/docker-hadoop.git
cat docker-compose.yml 查看资源清单
version: &amp;#34;3&amp;#34; services: namenode: image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8 container_name: namenode restart: always ports: - 9870:9870 - 9000:9000 volumes: - hadoop_namenode:/hadoop/dfs/name environment: - CLUSTER_NAME=test env_file: - .</description></item><item><title>计算机网络复习</title><link>https://mykaneki.github.io/docs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid><description>思维导图> 思维导图 # 在notion查看
https://opposite-approval-0f0.notion.site/bb2e7dc1c680493e954b6804910d4c0f
计网英文复习> 计网英文复习 # chapter 1 Computer Networks and the Internet> chapter 1 Computer Networks and the Internet # chapter 1 Computer Networks and the Internet</description></item><item><title>密码学学习笔记</title><link>https://mykaneki.github.io/docs/%E5%AF%86%E7%A0%81%E5%AD%A6/</link><pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E5%AF%86%E7%A0%81%E5%AD%A6/</guid><description>1. 绪论> 1. 绪论 # 任何需要可信的第三方的计算，都可以舍弃第三方
1.1 Security Objectives> 1.1 Security Objectives # 保密性 Confidentiality
信息的非授权泄露
数据保密性 Data confidentiality
确保自己的隐私信息不在未授权的情况下透露给他人。
隐私性 Privacy
确保自己的隐私能够被自己控制，如：向谁授权，让其获得这些隐私。
完整性 Integrity
信息的非授权更改和毁坏
数据完整性 Data integrity
确保信息和程序只能以特定和授权的方式进行更改，避免信息的不恰当更改或破坏。</description></item><item><title>数据库系统概论-基础</title><link>https://mykaneki.github.io/docs/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/</link><pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/</guid><description/></item><item><title>杂记</title><link>https://mykaneki.github.io/docs/%E6%9D%82%E8%AE%B0/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E6%9D%82%E8%AE%B0/</guid><description>彻底删除idea项目> 彻底删除idea项目 # remove module 手动删除文件夹 删除项目引用 使用Everything搜索找到 项目.contexts.zip和项目.tasks.zip两个文件，将其删除 idea快捷键> idea快捷键 # 批量编辑 ：alt + shift+insert
方法说明注释：输入/** ,点击“Enter”
数组越界问题> 数组越界问题 # int main(int argc, char* argv[]){ int i = 0; int arr[3] = {0}; for(; i&amp;lt;=3; i++){ arr[i] = 0; printf(&amp;#34;hello world\n&amp;#34;); } return 0; } 疑问：这段代码的运行结果理论上是无限打印，实际上VS编译器中只打印了四次。</description></item><item><title/><link>https://mykaneki.github.io/docs/java%E5%A4%8D%E4%B9%A0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/java%E5%A4%8D%E4%B9%A0/</guid><description>day03 Java语言的特性> day03 Java语言的特性 # ~
（1）Java的简单性
Java语言底层是C++，所以JVM是用C++语言写好的一个虚拟的电脑。
没有指针概念，不允许直接通过指针操作内存；java只支持单继承；
（2）Java的跨平台
（3）Java的健壮性
GC机制，自动垃圾回收机制
（4）Java完全面向对象
（5）Java语言支持多线程
~~
什么是跨平台，什么是可移植？~
​ java语言只要编写一次，可以做到到处运行。(.java - .class 字节码 - 机器码 JVM)
跨平台指的是Java程序可以在不同的操作系统上运行，而不需要修改源代码或重新编译。这是因为Java程序运行在JVM（Java虚拟机）上，而JVM负责将Java字节码转换为特定平台的机器码 1。
可移植指的是Java程序可以在不同的硬件和软件环境中保持一致的行为和结果。这是因为Java语言规范定义了一套严格的规则，例如数据类型的大小、数值运算的精度、字符编码等~~
JVM在哪里？怎么安装JVM？
不同的操作系统需要安装对应版本的JVM？
JDK JRE JVM三者关系？~</description></item><item><title/><link>https://mykaneki.github.io/docs/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mykaneki.github.io/docs/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%E9%A1%B9%E7%9B%AE/</guid><description>前端初始化 - ANT DESIGN PRO> 前端初始化 - ANT DESIGN PRO # 下载node、mysql
阅读 官方文档，初始化ANT DESIGN PRO
选择包管理器tyarn
更新npm npm install -g npm@9.6.0
安装yarn、tyarn npm install yarn tyarn -g
安装是否成功测试 tyarn -v 1.</description></item></channel></rss>